# Default values for kubernetes-templating.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

namespace:
  name: "homework"

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.angie.software/angie
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.10.0"

initContainers:
  command: "[ 'sh', '-c', 'wget -O /init/index.html https://example.dwweb.ru/index.html' ]"
  enabled: true
  image: busybox
  tag: 1.28
  # volumeMounts:
  # - mountPath: /init
  #   name: shared-volume
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "monitoring"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 2000
  runAsGroup: 3000
  seccompProfile:
    type: RuntimeDefault

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  selector:
    app: webserversel
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 5000
  targetPort: 8000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  name: webserver-ingress-m
  annotations: 
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /metrics.html
  ingressClassName: nginx
  rules:
  hosts: 
    - host: homework.otus
      http:
      paths:
        - path: /metrics(/$|$)
          pathType: ImplementationSpecific
          backend:
            service:
              name: webserver-service
              port:
                number: 5000

#  hosts:
#    - host: chart-example.local
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  enabled: true
  httpGet:
    path: /index.html
#    port:  It will makebe a values service.targetPort - see deployment.yaml
  failureThreshold: 30
  periodSeconds: 3

lifecycle:
  postStart:
    exec:
      command: [ "sh", "-c", "/opt/checkMetrics.sh" ]
  preStop:
    exec:
      command: [ "sh", "-s", "rm -f /homework/index.html" ]

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
initVolumes:
  - name: shared-volume
    emptyDir:
      sizeLimit: 5Mi

volumes:
  - name: angie-cache
    emptyDir:
      sizeLimit: 5Mi
  - name: shared-volume
    emptyDir:
      sizeLimit: 5Mi
  - name: check-metrics
    projected:
      sources:
      - configMap:
          name: check-metrics
          items:
          - key:  checkMetrics.sh
            path: checkMetrics.sh
            mode: 0755
  - name: angie-config
    configMap:
      name: angie-config

# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - mountPath: /homework/
    name: shared-volume
  - name: angie-config
    mountPath: /etc/angie/angie.conf
    subPath: angie.conf
  - name: angie-config
    mountPath: /etc/angie/http.d/default.conf
    subPath: default.conf
  - name: check-metrics
    mountPath: /opt/checkMetrics.sh
    subPath: checkMetrics.sh
  - name: angie-cache
    mountPath: /var/cache/angie/

initVolumeMounts:
  - name: shared-volume
    mountPath: /init/
  
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
